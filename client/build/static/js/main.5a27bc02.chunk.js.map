{"version":3,"sources":["components/Admin/MenuSider/menuSider.js","utils/formValidation.js","components/Admin/RegisterForm/RegisterForm.js","api/user.js","api/config.js","pages/Admin/SignIn/SignIn.js","layouts/LayoutBasic.js","pages/Error404.js","config/routes.js","layouts/LayoutAdmin.js","pages/Admin/Admin.js","pages/Home.js","pages/Contact.js","App.js","serviceWorker.js","index.js","assets/img/png/logo-white.png"],"names":["withRouter","props","menuCollapsed","location","Sider","Layout","className","collapsed","theme","mode","defaultSelectedKeys","pathname","Item","key","to","HomeOutlined","UserOutlined","MenuOutlined","removeClassErrorSuccess","inputData","classList","remove","RegisterForm","useState","email","password","repeatPassword","privacyPolicy","inputs","setInputs","formValid","setFormValid","inputValidation","e","target","type","name","value","test","add","emailValidation","minLength","length","minLengthValidation","checked","onSubmitCapture","preventDefault","passwordVal","repeatPasswordVal","emailVal","privacyPolicyVal","notification","message","data","url","params","method","body","JSON","stringify","headers","fetch","then","Response","console","log","signUpApi","onChange","prefix","style","color","placeholder","LockOutlined","htmlType","SingIn","Content","TabPane","Tabs","src","Logo","alt","tab","LoadRoutes","routes","map","route","index","path","exact","component","Error404","Header","Footer","AdminSignIn","AdminSingIn","RouteWithSubRoutes","render","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.5a27bc02.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport { HomeOutlined, UserOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport './MenuSider.scss';\n\nfunction MenuSider(props) {    \n    const { menuCollapsed, location } = props;    \n    const { Sider } = Layout;\n \n    return (\n        <Sider className=\"admin-sider\" collapsed={menuCollapsed}>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[location.pathname]}>\n                <Menu.Item key=\"/admin\">\n                    <Link to={\"/admin\"}>\n                        <HomeOutlined />\n                        <span className=\"nav-text\">Home</span>\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"/admin/users\">\n                    <Link to={\"/admin/users\"}>\n                        <UserOutlined />                        \n                        <span className=\"nav-text\">Usuarios</span>\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"/admin/menu\">\n                    <Link to={\"/admin/menu\"}>\n                        <MenuOutlined />                       \n                        <span className=\"nav-text\">Men√∫</span>\n                    </Link>\n                </Menu.Item>\n            </Menu>\n        </Sider>\n    );\n}\nexport default withRouter(MenuSider);\n\n\n\n","export function minLengthValidation(inputData, minLength) {\n    const { value } = inputData;\n\n    removeClassErrorSuccess(inputData);\n\n    if(value.length >= minLength) {\n        inputData.classList.add('success');\n        return true;\n    } else {\n        inputData.classList.add('error');\n        return false;\n    }\n}\n\nexport function emailValidation (inputData) {\n    \n    // eslint-disable-next-line no-useless-escape\n    const emailValid = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    const { value } = inputData;\n\n    removeClassErrorSuccess(inputData);\n\n    const resultValidation = emailValid.test(value);\n    if(resultValidation) {\n        inputData.classList.add('success');\n        return true;\n    } else {\n        inputData.classList.add('error');\n        return false;\n    }\n    \n}\n\nfunction removeClassErrorSuccess(inputData) {\n    inputData.classList.remove('success');\n    inputData.classList.remove('error');\n}\n\n\n\n","import React, {useState} from 'react';\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { \n    UserOutlined,\n    LockOutlined\n } from '@ant-design/icons';\n import { emailValidation, minLengthValidation } from '../../../utils/formValidation.js';\n import { signUpApi } from '../../../api/user.js';\n\nimport './RegisterForm.scss';\n\n\nexport default function RegisterForm() {\n    const [inputs, setInputs] = useState({\n        email:\"\",\n        password: \"\",\n        repeatPassword: \"\",\n        privacyPolicy: false\n    });\n\n    const [formValid, setFormValid] = useState({\n        email: false,\n        password: false,\n        repeatPassword: false,\n        privacyPolicy: false\n    })\n\n    const changeForm = e => {\n        if(e.target.name === \"privacyPolicy\") {\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.checked\n            });\n        }else {\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.value\n            })\n        }\n    };\n\n    const inputValidation = e => {\n        const {type, name} = e.target;\n        if(type === \"email\") {\n            setFormValid({\n                ...formValid,\n                [name]: emailValidation(e.target)\n            });\n        }\n        if( type === \"password\") {\n            setFormValid({\n                ...formValid,\n                [name]: minLengthValidation(e.target, 6)\n            });\n        }\n        if(type === \"checkbox\") {\n            setFormValid({\n                ...formValid,\n                [name]: e.target.checked\n            });\n        }\n    };\n\n    const register = e => {\n        e.preventDefault();\n        const { email, password,repeatPassword, privacyPolicy } = formValid;\n        const passwordVal = inputs.password;\n        const repeatPasswordVal = inputs.repeatPassword;\n        const emailVal = inputs.email;\n        const privacyPolicyVal = inputs.privacyPolicy;\n\n        if( !emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n            notification[\"error\"] ({\n                message: \"Todos los campos son obligatorios\"\n            });\n        } else {\n            if(passwordVal !== repeatPasswordVal) {\n                notification[\"error\"]({\n                    message: \"Las contrase√±as tienen que ser iguales.\"\n                });\n            } else {\n                const result = signUpApi(inputs);\n            }\n        }\n\n    };\n\n    return(\n        <Form className=\"register-form\" onSubmitCapture={register}  onChange={changeForm} >\n            <Form.Item>\n                <Input \n                    prefix={<UserOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Correo electronico\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.email}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input \n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Contrase√±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.password}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input \n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"repeatPassword\"\n                    placeholder=\"Repetir contrase√±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.repeatPassword}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Checkbox name=\"privacyPolicy\" onChange={inputValidation} checked={inputs.privacyPolicy} >\n                    He le√≠do y acepto la pol√≠tica de privacidad.\n                </Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" className=\"register-form__button\">\n                    Crear cuenta\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n};\n\n","import { basePath, apiVersion } from './config';\n\nexport function signUpApi(data) {\n    const url = `${basePath}/${apiVersion}/sign-up`;\n    const params = {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    };\n    \n    fetch(url, params).then(Response => {\n        console.log(Response)\n           //return Response.json();\n        });//.then(result => {\n            //return result\n        //})\n}","export const basePath = \"http://localhost:3977/api\";\nexport const apiVersion = \"v1\";\n\n","import React from \"react\";\nimport {Layout, Tabs} from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport Logo from '../../../assets/img/png/logo-white.png';\nimport RegisterForm from '../../../components/Admin/RegisterForm';\n\nimport './SignIn.scss';\n\nexport default function SingIn() {\n    const { Content } = Layout;\n    const { TabPane } = Tabs;\n\n\n    return(\n        <Layout className=\"sign-in\">\n            <Content className=\"sign-in__content\">\n                <h1 className=\"sign-in__content-logo\">\n                    <img src= {Logo} alt=\"Logo\"/>\n                </h1>\n\n                <div className=\"sign-in__content-tabs\">\n                    <Tabs type=\"card\">\n                        <TabPane tab={<span>Entrar</span>} key=\"1\">\n                            Componente LoginForm\n                        </TabPane>\n                        <TabPane tab={<span>Nuevo usuario</span>} key=\"2\">\n                            <RegisterForm />\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </Content>\n        </Layout>\n    )\n}","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Layout} from \"antd\";\nimport \"./LayoutBasic.scss\";\n\nexport default function LayoutBasic(props) {\n    const {routes} = props;\n    const {Content, Footer} = Layout;\n    return(\n        <Layout>\n            <h2>Menu sider basic User...</h2>\n            <Layout>\n                <Content>\n                    <LoadRoutes routes={routes} />\n                </Content>\n                <Footer>David Diaz </Footer>\n            </Layout>\n        </Layout>\n    );\n}\n\nfunction LoadRoutes({routes}) {\n    return (\n        <Switch>\n           {routes.map((route, index) => (\n                <Route \n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.component}\n                />\n            ))}\n        </Switch>\n    );\n}","import React from \"react\";\n\n\nexport default function Error404() {\n    return (\n        <div>\n            <h2>ERROR 404</h2>\n        </div>\n    )\n}","//Layout\n\nimport LayoutAdmin from '../layouts/LayoutAdmin';\nimport LayoutBasic from '../layouts/LayoutBasic';\n\n//Admin Pages\n\nimport AdminHome from '../pages/Admin';\nimport AdminSingIn from '../pages/Admin/SignIn';\n\n//pages\nimport Home from '../pages/Home';\nimport Contact from '../pages/Contact';\n\n//other\nimport Error404 from \"../pages/Error404\";\n\nconst routes = [\n    {\n        path: \"/admin\",\n        component: LayoutAdmin,\n        exact: false,\n        routes: [\n            {\n                path: \"/admin\",\n                component: AdminHome,\n                exact: true\n            },\n            {\n                path: \"/admin/login\",\n                component: AdminSingIn,\n                exact: true\n            },\n            {\n                component: Error404\n            }\n        ]\n    },\n    {\n        path: \"/\",\n        exact: false,\n        component: LayoutBasic,\n        routes: [\n            {\n                path: \"/\",\n                component: Home,\n                exact: true\n            },\n            {\n                path: \"/contact\",\n                component: Contact,\n                exact: true\n            },\n            {\n                component: Error404\n            }\n        ]\n    }\n];\n\nexport default routes;","import React, { useState } from \"react\";\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {Layout} from \"antd\";\n\nimport './LayoutAdmin.scss';\nimport routes from \"../config/routes\";\nimport MenuTop from '../components/Admin/menu-top';\nimport MenuSider from '../components/Admin/MenuSider';\nimport AdminSignIn from \"../pages/Admin/SignIn\";\n\nexport default function LayoutAdmin(props){\n    const { routes } = props;\n    const [menuCollapsed, setMenuCollapsed] = useState(false)\n    const {Header, Content,Footer} = Layout;\n\n    const user = null;\n\n    if(!user){\n        return(\n            <>\n                <Route path=\"/admin/login\" component={AdminSignIn} /> ;\n                <Redirect to=\"/admin/login\" />;\n            </>\n        ) \n        \n    }\n\n    return (\n        <Layout>\n            <MenuSider menuCollapsed={menuCollapsed} />\n            <Layout className=\"layout-admin\" style={{marginLeft: menuCollapsed ? \"80px\" : \"200px\"}}>\n                <Header className=\"layout-admin__header\">\n                    <MenuTop menuCollapsed={menuCollapsed} setMenuCollapsed={setMenuCollapsed}/>\n                </Header>\n                <Content className=\"layout-admin__content\">\n                    <LoadRoutes routes={routes} />\n                </Content>\n                <Footer className=\"layout-admin__footer\">David Diaz </Footer>\n            </Layout>\n        </Layout>\n    );\n}\n\nfunction LoadRoutes({ routes }){\n    return (\n        <Switch>\n            {routes.map((route, index) => (\n                <Route \n                    key= {index}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.component}\n                />\n            ))}\n        </Switch>\n    );\n}\n        \n","import React from \"react\";\n\n\nexport default function Admin() {\n    return(\n        <div>\n            <h1>Estamos en Admin.</h1>\n        </div>\n    );\n}","import React from \"react\";\n\n\nexport default function Home(){\n    return (\n        <div>\n            <h1>\n                Estamos dentro de Home.\n            </h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function Contact() {\n    return(\n        <div>\n            <h1>Estamos en contact</h1>\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport routes from './config/routes';\nimport \"./App.scss\";\n\n\n\nfunction App() {\n  return(\n    <Router>\n      <Switch>\n        {routes.map((route, index) => (\n          <RouteWithSubRoutes key={index} {...route} />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nfunction RouteWithSubRoutes(route) {\n  console.log(route);\n  return (\n    <Route \n      path={route.path}\n      exact={route.exact}\n      render={props => <route.component routes={route.routes} {...props}/>}\n    />\n  ) \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-white.ce1500c0.png\";"],"sourceRoot":""}