{"ast":null,"code":"import _defineProperty from\"/Users/ddiaz/Desktop/web-personal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ddiaz/Desktop/web-personal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ddiaz/Desktop/web-personal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Input,Button,Checkbox,notification}from'antd';import{UserOutlined,LockOutlined}from'@ant-design/icons';import{emailValidation,minLengthValidation}from'../../../utils/formValidation.js';import{signUpApi}from'../../../api/user.js';import'./RegisterForm.scss';export default function RegisterForm(){var _useState=useState({email:\"\",password:\"\",repeatPassword:\"\",privacyPolicy:false}),_useState2=_slicedToArray(_useState,2),inputs=_useState2[0],setInputs=_useState2[1];var _useState3=useState({email:false,password:false,repeatPassword:false,privacyPolicy:false}),_useState4=_slicedToArray(_useState3,2),formValid=_useState4[0],setFormValid=_useState4[1];var changeForm=function changeForm(e){if(e.target.name===\"privacyPolicy\"){setInputs(_objectSpread(_objectSpread({},inputs),{},_defineProperty({},e.target.name,e.target.checked)));}else{setInputs(_objectSpread(_objectSpread({},inputs),{},_defineProperty({},e.target.name,e.target.value)));}};var inputValidation=function inputValidation(e){var _e$target=e.target,type=_e$target.type,name=_e$target.name;if(type===\"email\"){setFormValid(_objectSpread(_objectSpread({},formValid),{},_defineProperty({},name,emailValidation(e.target))));}if(type===\"password\"){setFormValid(_objectSpread(_objectSpread({},formValid),{},_defineProperty({},name,minLengthValidation(e.target,6))));}if(type===\"checkbox\"){setFormValid(_objectSpread(_objectSpread({},formValid),{},_defineProperty({},name,e.target.checked)));}};var register=function register(e){e.preventDefault();var email=formValid.email,password=formValid.password,repeatPassword=formValid.repeatPassword,privacyPolicy=formValid.privacyPolicy;var passwordVal=inputs.password;var repeatPasswordVal=inputs.repeatPassword;var emailVal=inputs.email;var privacyPolicyVal=inputs.privacyPolicy;if(!emailVal||!passwordVal||!repeatPasswordVal||!privacyPolicyVal){notification[\"error\"]({message:\"Todos los campos son obligatorios\"});}else{if(passwordVal!==repeatPasswordVal){notification[\"error\"]({message:\"Las contraseÃ±as tienen que ser iguales.\"});}else{var result=signUpApi(inputs);}}};return/*#__PURE__*/React.createElement(Form,{className:\"register-form\",onSubmitCapture:register,onChange:changeForm},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(UserOutlined,{style:{color:\"rgba(0,0,0,.25)\"}}),type:\"email\",name:\"email\",placeholder:\"Correo electronico\",className:\"register-form__input\",onChange:inputValidation,value:inputs.email})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(LockOutlined,{style:{color:\"rgba(0,0,0,.25)\"}}),type:\"password\",name:\"password\",placeholder:\"Contrase\\xF1a\",className:\"register-form__input\",onChange:inputValidation,value:inputs.password})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(LockOutlined,{style:{color:\"rgba(0,0,0,.25)\"}}),type:\"password\",name:\"repeatPassword\",placeholder:\"Repetir contrase\\xF1a\",className:\"register-form__input\",onChange:inputValidation,value:inputs.repeatPassword})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Checkbox,{name:\"privacyPolicy\",onChange:inputValidation,checked:inputs.privacyPolicy},\"He le\\xEDdo y acepto la pol\\xEDtica de privacidad.\")),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{htmlType:\"submit\",className:\"register-form__button\"},\"Crear cuenta\")));};","map":{"version":3,"sources":["/Users/ddiaz/Desktop/web-personal/client/src/components/Admin/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","emailValidation","minLengthValidation","signUpApi","RegisterForm","email","password","repeatPassword","privacyPolicy","inputs","setInputs","formValid","setFormValid","changeForm","e","target","name","checked","value","inputValidation","type","register","preventDefault","passwordVal","repeatPasswordVal","emailVal","privacyPolicyVal","message","result","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { \n    UserOutlined,\n    LockOutlined\n } from '@ant-design/icons';\n import { emailValidation, minLengthValidation } from '../../../utils/formValidation.js';\n import { signUpApi } from '../../../api/user.js';\n\nimport './RegisterForm.scss';\n\n\nexport default function RegisterForm() {\n    const [inputs, setInputs] = useState({\n        email:\"\",\n        password: \"\",\n        repeatPassword: \"\",\n        privacyPolicy: false\n    });\n\n    const [formValid, setFormValid] = useState({\n        email: false,\n        password: false,\n        repeatPassword: false,\n        privacyPolicy: false\n    })\n\n    const changeForm = e => {\n        if(e.target.name === \"privacyPolicy\") {\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.checked\n            });\n        }else {\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.value\n            })\n        }\n    };\n\n    const inputValidation = e => {\n        const {type, name} = e.target;\n        if(type === \"email\") {\n            setFormValid({\n                ...formValid,\n                [name]: emailValidation(e.target)\n            });\n        }\n        if( type === \"password\") {\n            setFormValid({\n                ...formValid,\n                [name]: minLengthValidation(e.target, 6)\n            });\n        }\n        if(type === \"checkbox\") {\n            setFormValid({\n                ...formValid,\n                [name]: e.target.checked\n            });\n        }\n    };\n\n    const register = e => {\n        e.preventDefault();\n        const { email, password,repeatPassword, privacyPolicy } = formValid;\n        const passwordVal = inputs.password;\n        const repeatPasswordVal = inputs.repeatPassword;\n        const emailVal = inputs.email;\n        const privacyPolicyVal = inputs.privacyPolicy;\n\n        if( !emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n            notification[\"error\"] ({\n                message: \"Todos los campos son obligatorios\"\n            });\n        } else {\n            if(passwordVal !== repeatPasswordVal) {\n                notification[\"error\"]({\n                    message: \"Las contraseÃ±as tienen que ser iguales.\"\n                });\n            } else {\n                const result = signUpApi(inputs);\n            }\n        }\n\n    };\n\n    return(\n        <Form className=\"register-form\" onSubmitCapture={register}  onChange={changeForm} >\n            <Form.Item>\n                <Input \n                    prefix={<UserOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Correo electronico\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.email}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input \n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"ContraseÃ±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.password}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input \n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"repeatPassword\"\n                    placeholder=\"Repetir contraseÃ±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.repeatPassword}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Checkbox name=\"privacyPolicy\" onChange={inputValidation} checked={inputs.privacyPolicy} >\n                    He leÃ­do y acepto la polÃ­tica de privacidad.\n                </Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" className=\"register-form__button\">\n                    Crear cuenta\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n};\n\n"]},"metadata":{},"sourceType":"module"}