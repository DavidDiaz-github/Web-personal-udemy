{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { FontSizeOutlined, LinkOutlined } from '@ant-design/icons';\nimport { updateMenuApi } from '../../../../api/menu';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport './EditMenuWebForm.scss';\nexport default function EditMenuWebForm(props) {\n  const {\n    setIsVisibleModal,\n    setReloadMenuWeb,\n    menu\n  } = props;\n  const [menuWebData, setMenuWebData] = useState(menu);\n  useEffect(() => {\n    setMenuWebData(menu);\n  }, [menu]);\n\n  const editMenu = e => {\n    e.preventDefault();\n\n    if (!menuWebData.title || !menuWebData.url) {\n      notification['error']({\n        message: 'Todos los campos son obligatorios.'\n      });\n    } else {\n      const accessToken = getAccessTokenApi();\n      updateMenuApi(accessToken, menuWebData._id, menuWebData).then(response => {\n        notification['success']({\n          message: response\n        });\n      }).catch(() => {\n        notification['error']({\n          message: 'Error del servidor. Intentelo más tarde.'\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-menu-web-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditForm, {\n    menuWebData: menuWebData,\n    setMenuWebData: setMenuWebData,\n    editMenu: editMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction EditForm(props) {\n  const {\n    menuWebData,\n    setMenuWebData,\n    editMenu\n  } = props;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"form-edit\",\n    onSubmitCapture: editMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontSizeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }),\n    placeholder: \"T\\xEDtulo\",\n    value: menuWebData.title,\n    onChange: e => setMenuWebData({ ...menuWebData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LinkOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }),\n    placeholder: \"URL\",\n    value: menuWebData.url,\n    onChange: e => setMenuWebData({ ...menuWebData,\n      url: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Actualizar\")));\n}","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js"],"names":["React","useState","useEffect","Form","Input","Button","notification","FontSizeOutlined","LinkOutlined","updateMenuApi","getAccessTokenApi","EditMenuWebForm","props","setIsVisibleModal","setReloadMenuWeb","menu","menuWebData","setMenuWebData","editMenu","e","preventDefault","title","url","message","accessToken","_id","then","response","catch","EditForm","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport {\n    FontSizeOutlined,\n    LinkOutlined\n} from '@ant-design/icons';\nimport { updateMenuApi } from '../../../../api/menu';\nimport { getAccessTokenApi } from '../../../../api/auth';\n\nimport './EditMenuWebForm.scss';\n\nexport default function EditMenuWebForm(props) {\n    const { setIsVisibleModal, setReloadMenuWeb, menu } = props;\n    const [menuWebData, setMenuWebData] = useState(menu);\n\n    useEffect(() => {\n        setMenuWebData(menu)\n    }, [menu])\n    \n    const editMenu = e => {\n        e.preventDefault()\n        \n        if (!menuWebData.title || !menuWebData.url) {\n            notification['error']({message: 'Todos los campos son obligatorios.'})\n        } else {\n            const accessToken = getAccessTokenApi();\n            \n            updateMenuApi(accessToken, menuWebData._id, menuWebData)\n                .then(response => {\n                    notification['success']({message: response})\n                })\n                .catch(() => {\n                    notification['error']({message: 'Error del servidor. Intentelo más tarde.'})\n                })\n        }\n    }\n    \n    return (\n        <div className='edit-menu-web-form'>\n            <EditForm menuWebData={menuWebData} setMenuWebData={setMenuWebData} editMenu={editMenu} />\n        </div>\n    )\n}\n\nfunction EditForm(props) {\n    const { menuWebData, setMenuWebData, editMenu } = props;\n\n    return (\n        <Form className='form-edit' onSubmitCapture={editMenu}>\n            <Form.Item>\n                <Input \n                    prefix={<FontSizeOutlined />}\n                    placeholder='Título'\n                    value={menuWebData.title}\n                    onChange={e => setMenuWebData({ ...menuWebData, title: e.target.value})}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input \n                    prefix={<LinkOutlined />}\n                    placeholder='URL'\n                    value={menuWebData.url}\n                    onChange={e => setMenuWebData({ ...menuWebData, url: e.target.value})}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type='primary' htmlType='submit' className='btn-submit'>Actualizar</Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}