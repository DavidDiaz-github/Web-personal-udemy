{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Form, Input, Col, Button, DatePicker, notification } from 'antd';\nimport { FontSizeOutlined, LinkOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport './AddEditPostForm.scss';\nexport default function AddEditPostForm(props) {\n  const {\n    setIsVisibleModal,\n    setReloadPosts,\n    post\n  } = props;\n  const [postData, setPostData] = useState({});\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    } else {\n      setPostData({});\n    }\n  }, [post]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-edit-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddEditForm, {\n    postData: postData,\n    setPostData: setPostData,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n}\n;\n\nfunction AddEditForm(props) {\n  const {\n    postData,\n    setPostData,\n    post\n  } = props;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"add-edit-post-form\",\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontSizeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }),\n    placeholder: \"Titulo\" // value={ }\n    // onChange={}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LinkOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }),\n    placeholder: \"URL\" // value={ }\n    // onChange={}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    format: \"DD/MM/YYYY HH:mm:ss\",\n    placeholder: \"Fecha de publicaci\\xF3n\",\n    showTime: {\n      defaultValue: moment(\"00:00:00\", \"HH:mm:ss\")\n    } // value={ }\n    // onChange={}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Editor, {\n    value: \"\",\n    init: {\n      height: 400,\n      width: '80%',\n      menubar: true,\n      plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n      toolbar: 'undo redo | formatselect | bold italic backcolor | \\\n                    alignleft aligncenter alignright alignjustify | \\\n                    bullist numlist outdent indent | removeformat | help'\n    } // onEditorChange={this.handleEditorChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, post ? 'Actualizar Post' : 'Crear Post'));\n}","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js"],"names":["React","useState","useEffect","Row","Form","Input","Col","Button","DatePicker","notification","FontSizeOutlined","LinkOutlined","moment","Editor","getAccessTokenApi","AddEditPostForm","props","setIsVisibleModal","setReloadPosts","post","postData","setPostData","AddEditForm","width","defaultValue","height","menubar","plugins","toolbar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Form, Input, Col, Button, DatePicker, notification } from 'antd';\nimport {\n    FontSizeOutlined,\n    LinkOutlined\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { getAccessTokenApi } from '../../../../api/auth';\n \n\nimport './AddEditPostForm.scss';\n\nexport default function AddEditPostForm(props) {\n\n    const { setIsVisibleModal, setReloadPosts, post } = props;\n    const [postData, setPostData] = useState({});\n\n    useEffect(() => {\n        if (post) {\n            setPostData(post)\n        } else {\n            setPostData({})\n        }\n    }, [post])\n\n    return (\n        <div className='add-edit-post-form'>\n            <AddEditForm postData={postData} setPostData={setPostData} post={post} />\n        </div>\n    )\n};\n\nfunction AddEditForm(props) {\n    const { postData, setPostData, post } = props\n    \n    return (\n        <Form className='add-edit-post-form' layout='inline'>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Input \n                        prefix={<FontSizeOutlined />}\n                        placeholder='Titulo'\n                        // value={ }\n                        // onChange={}\n                    />\n                </Col>\n                <Col span={8}>\n                    <Input \n                        prefix={<LinkOutlined />}\n                        placeholder='URL'\n                        // value={ }\n                        // onChange={}\n                    />\n                </Col>\n                <Col span={8}>\n                    <DatePicker \n                        style={{ width: '100%' }}\n                        format=\"DD/MM/YYYY HH:mm:ss\"\n                        placeholder='Fecha de publicaciÃ³n'\n                        showTime={{defaultValue: moment(\"00:00:00\", \"HH:mm:ss\")}}\n                        // value={ }\n                        // onChange={}\n                    />\n                </Col>\n            </Row>\n            <Editor\n                value=\"\"\n                init={{\n                    height: 400,\n                    width: '80%',\n                    menubar: true,\n                    plugins: [\n                    'advlist autolink lists link image charmap print preview anchor',\n                    'searchreplace visualblocks code fullscreen',\n                    'insertdatetime media table paste code help wordcount'\n                ],\n                toolbar:\n                    'undo redo | formatselect | bold italic backcolor | \\\n                    alignleft aligncenter alignright alignjustify | \\\n                    bullist numlist outdent indent | removeformat | help'\n                }}\n                // onEditorChange={this.handleEditorChange}\n            />\n            <Button type='primary' htmlType='submit' className='btn-submit'>\n                {post ? 'Actualizar Post' : 'Crear Post'}\n            </Button>\n        </Form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}