{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/components/Web/Blog/PostListWeb/PostListWeb.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Spin, notification, List } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport queryString from 'query-string';\nimport Pagination from '../../../Pagination';\nimport { getPostApi } from '../../../../api/post';\nimport \"moment/locale/es\";\nimport './PostListWeb.scss';\nexport default function PostListWeb(props) {\n  const {\n    location,\n    history\n  } = props;\n  const [posts, setPosts] = useState(null);\n  const {\n    page = 1\n  } = queryString.parse(location.search);\n  useEffect(() => {\n    getPostApi(12, page).then(response => {\n      if ((response === null || response === void 0 ? void 0 : response.code) !== 200) {\n        notification['warning']({\n          message: response.message\n        });\n      } else {\n        setPosts(response.post);\n      }\n    }).catch(() => notification['error']({\n      message: 'Error del servidor.'\n    }));\n  }, [page]);\n\n  if (!posts) {\n    return /*#__PURE__*/React.createElement(Spin, {\n      tip: \"Cargando\",\n      style: {\n        width: '100%',\n        padding: '200px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-list-web\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Blog\"), /*#__PURE__*/React.createElement(List, {\n    dataSource: posts.docs,\n    renderItem: post => /*#__PURE__*/React.createElement(Post, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 63\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    posts: posts,\n    location: location,\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction Post(props) {\n  const {\n    post\n  } = props;\n  const day = moment(post.date).format(\"DD\");\n  const month = moment(post.date).format(\"MMMM\");\n  return /*#__PURE__*/React.createElement(List.Item, {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, day), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, month)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `blog/${post.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    title: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/components/Web/Blog/PostListWeb/PostListWeb.js"],"names":["React","useState","useEffect","Spin","notification","List","Link","moment","queryString","Pagination","getPostApi","PostListWeb","props","location","history","posts","setPosts","page","parse","search","then","response","code","message","post","catch","width","padding","docs","Post","day","date","format","month","url","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Spin, notification, List } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport queryString from 'query-string';\nimport Pagination from '../../../Pagination';\nimport { getPostApi } from '../../../../api/post';\nimport \"moment/locale/es\";\n\nimport './PostListWeb.scss';\nexport default function PostListWeb(props) {\n\n    const { location, history } = props;\n    const [posts, setPosts] = useState(null);\n    const { page = 1 } = queryString.parse(location.search);\n\n    useEffect(() => {\n        getPostApi(12, page)\n            .then(response => {\n                if (response?.code !== 200) {\n                    notification['warning']({message: response.message})\n                } else {\n                    setPosts(response.post)\n                }\n            })\n        .catch(() => notification['error']({message: 'Error del servidor.'}))\n    }, [page])\n\n    if (!posts) {\n        return(<Spin tip='Cargando' style={{width: '100%', padding:'200px 0'}} />)\n    }\n\n    return (\n        <div className='post-list-web'>\n            <h1>Blog</h1>\n            <List dataSource={posts.docs} renderItem={post => <Post post={post} />} />\n            <Pagination posts={posts} location={location} history={history} />\n        </div>\n    )\n}\n\nfunction Post(props) {\n\n    const { post } = props;\n    \n    const day = moment(post.date).format(\"DD\");\n    const month = moment(post.date).format(\"MMMM\")\n\n    return (\n        <List.Item className='post'>\n            <div className='post__date'>\n                <strong>{day}</strong>\n                <strong>{month}</strong>\n            </div>\n            <div>\n                <Link to={`blog/${post.url}`}>\n                    <List.Item.Meta title={post.title} />\n                </Link>\n            </div>\n        </List.Item>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}