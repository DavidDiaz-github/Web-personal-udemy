{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/Desktop/web-personal/client/src/components/Admin/Users/ListUsers/ListUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button, notification, Modal as ModalAntd } from 'antd';\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/noAvatar.png';\nimport Modal from '../../../Modal';\nimport EditUserForm from '../EditUserForm';\nimport { getAvatarApi, activateUserApi, deleteUserApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport './ListUsers.scss';\nconst {\n  confirm\n} = ModalAntd;\nexport default function ListUsers(props) {\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [modalContent, setModalContent] = useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users__header-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => setViewUsersActives(!viewUsersActives),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, viewUsersActives ? ' Usuarios Activos' : ' Usuarios inactivos')), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => console.log('creando usuario'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Nuevo Usuario\")), viewUsersActives ? /*#__PURE__*/React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    setReloadUsers: setReloadUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    setReloadUsers: setReloadUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 210\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent,\n    setReloadUsers\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastname ? user.lastname : '...'}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditUserForm, {\n      user: user,\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserActive, {\n      user: user,\n      editUser: editUser,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction UserActive(props) {\n  const {\n    user,\n    editUser,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const desactivateUser = () => {\n    const accessToken = getAccessTokenApi();\n    activateUserApi(accessToken, user._id, false).then(response => {\n      notification['success']({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification['error']({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: '多Eliminar Usuario?',\n      content: `多Estas seguro que quieres eliminar ${user.email}?`,\n      okText: 'Eliminar',\n      okType: \"danger\",\n      cancelText: 'Cancelar',\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification['success']({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification['error']({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: desactivateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 74\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 76\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }),\n    title: `\n                            ${user.name ? user.name : '...'} ${user.lastname ? user.lastname : '...'}\n                        `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }));\n}\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive,\n    setReloadUsers\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserInactive, {\n      user: user,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction UserInactive(props) {\n  const {\n    user,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const activateUser = () => {\n    const accessToken = getAccessTokenApi();\n    activateUserApi(accessToken, user._id, true).then(response => {\n      notification['success']({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification['error']({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: '多Eliminar Usuario?',\n      content: `多Estas seguro que quieres eliminar ${user.email}?`,\n      okText: 'Eliminar',\n      okType: \"danger\",\n      cancelText: 'Cancelar',\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification['success']({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification['error']({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: activateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CheckOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 64\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 68\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }),\n    title: `\n                ${user.name ? user.name : '...'} ${user.lastname ? user.lastname : '...'}\n            `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ddiaz/Desktop/web-personal/client/src/components/Admin/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","notification","Modal","ModalAntd","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","NoAvatar","EditUserForm","getAvatarApi","activateUserApi","deleteUserApi","getAccessTokenApi","confirm","ListUsers","props","usersActive","usersInactive","setReloadUsers","viewUsersActives","setViewUsersActives","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","console","log","UsersActive","editUser","user","name","lastname","UserActive","avatar","setAvatar","then","response","desactivateUser","accessToken","_id","message","catch","err","showDeleteConfirm","title","content","email","okText","okType","cancelText","onOk","UsersInactive","UserInactive","activateUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button, notification, Modal as ModalAntd } from 'antd';\nimport {\n    EditOutlined,\n    StopOutlined,\n    DeleteOutlined,\n    CheckOutlined\n} from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/noAvatar.png';\nimport Modal from '../../../Modal';\nimport EditUserForm from '../EditUserForm';\nimport { getAvatarApi, activateUserApi, deleteUserApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\n\n\nimport './ListUsers.scss';\n\nconst { confirm } = ModalAntd;\n\nexport default function ListUsers(props){\n    const { usersActive, usersInactive, setReloadUsers } = props;\n    const [viewUsersActives, setViewUsersActives] = useState(true);\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState('');\n    const [modalContent, setModalContent] = useState(null);\n\n    \n\n    return (\n        <div className='list-users'>\n            \n            <div className='list-users__header'>\n                <div className='list-users__header-switch'>\n                    <Switch \n                        defaultChecked\n                        onChange={() => setViewUsersActives(!viewUsersActives)}\n                    />\n                    <span>{viewUsersActives ? ' Usuarios Activos' : ' Usuarios inactivos'}</span>\n                </div>\n                <Button type='primary' onClick={() => console.log('creando usuario') }>\n                    Nuevo Usuario\n                </Button>\n            </div>\n\n            {viewUsersActives ? <UsersActive usersActive={usersActive} setIsVisibleModal={setIsVisibleModal} setModalTitle={setModalTitle} setModalContent={setModalContent} setReloadUsers={setReloadUsers}/> : <UsersInactive usersInactive={usersInactive} setReloadUsers={setReloadUsers}/>}\n            <Modal\n                title={modalTitle}\n                isVisible={isVisibleModal}\n                setIsVisible={setIsVisibleModal}\n            >{modalContent}</Modal>\n        </div>\n    )\n}\n\nfunction UsersActive(props) {\n    const { usersActive, setIsVisibleModal, setModalTitle, setModalContent, setReloadUsers } = props;\n\n    const editUser = user => {\n        setIsVisibleModal(true);\n        setModalTitle(`Editar ${user.name ? user.name : '...'} ${user.lastname ? user.lastname : '...'}`);\n        setModalContent(<EditUserForm user={user} setIsVisibleModal={setIsVisibleModal} setReloadUsers={setReloadUsers} />)\n    }\n\n    return (\n        <List \n            className='users-active'\n            itemLayout='horizontal'\n            dataSource={usersActive}\n            renderItem={user => <UserActive user={user} editUser={editUser} setReloadUsers={setReloadUsers}/>}\n        />\n    )\n}\n\nfunction UserActive(props) {\n    const { user, editUser, setReloadUsers } = props;\n    const [avatar, setAvatar] = useState(null);\n\n    useEffect(() => {\n        if (user.avatar) {\n            getAvatarApi(user.avatar).then(response => {\n                setAvatar(response)\n            })\n        } else {\n            setAvatar(null);\n        }\n    }, [user])\n\n    const desactivateUser = () => {\n        const accessToken = getAccessTokenApi();\n        activateUserApi(accessToken, user._id, false)\n            .then(response => {\n                notification['success']({ message: response })\n                setReloadUsers(true)\n            })\n            .catch(err => {\n                notification['error']({message: err})\n            })\n    }\n\n    const showDeleteConfirm = () => {\n        const accessToken = getAccessTokenApi();\n\n        confirm({\n            title: '多Eliminar Usuario?',\n            content: `多Estas seguro que quieres eliminar ${user.email}?`,\n            okText: 'Eliminar',\n            okType: \"danger\",\n            cancelText: 'Cancelar',\n            onOk() {\n                deleteUserApi(accessToken, user._id)\n                    .then(response => {\n                        notification['success']({ message: response })\n                        setReloadUsers(true)\n                    })\n                    .catch(err => {\n                        notification['error']({message: err})\n                    })\n            }\n        })\n    }\n\n    return (\n        <List.Item\n                    actions={[\n                        <Button type='primary' onClick={() => editUser(user)} ><EditOutlined /></Button>,\n                        <Button type='danger' onClick={desactivateUser} ><StopOutlined /></Button>,\n                        <Button type='danger' onClick={showDeleteConfirm} ><DeleteOutlined /></Button>\n                    ]}\n                >\n                    <List.Item.Meta \n                        avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n                        title={`\n                            ${user.name ? user.name : '...'} ${user.lastname ? user.lastname : '...'}\n                        `}\n                        description={user.email}\n                    />\n                </List.Item>\n    )\n}\nfunction UsersInactive(props) {\n    const { usersInactive, setReloadUsers } = props;\n    return (\n        <List \n            className='users-active'\n            itemLayout='horizontal'\n            dataSource={usersInactive}\n            renderItem={user => <UserInactive user={user} setReloadUsers={setReloadUsers}/>}\n        />\n    )\n}\n\nfunction UserInactive(props) {\n    const { user, setReloadUsers } = props;\n    const [avatar, setAvatar] = useState(null);\n\n    useEffect(() => {\n        if (user.avatar) {\n            getAvatarApi(user.avatar).then(response => {\n                setAvatar(response)\n            })\n        } else {\n            setAvatar(null);\n        }\n    }, [user])\n\n    const activateUser = () => {\n        const accessToken = getAccessTokenApi();\n        activateUserApi(accessToken, user._id, true)\n            .then(response => {\n                notification['success']({\n                    message: response\n                })\n                setReloadUsers(true)\n            })\n            .catch(err => {\n                notification['error']({\n                    message: err\n                })\n            })\n    }\n\n    const showDeleteConfirm = () => {\n        const accessToken = getAccessTokenApi();\n\n        confirm({\n            title: '多Eliminar Usuario?',\n            content: `多Estas seguro que quieres eliminar ${user.email}?`,\n            okText: 'Eliminar',\n            okType: \"danger\",\n            cancelText: 'Cancelar',\n            onOk() {\n                deleteUserApi(accessToken, user._id)\n                    .then(response => {\n                        notification['success']({ message: response })\n                        setReloadUsers(true)\n                    })\n                    .catch(err => {\n                        notification['error']({message: err})\n                    })\n            }\n        })\n    }\n\n    return (\n        <List.Item\n            actions={[\n                <Button type='primary' onClick={activateUser} ><CheckOutlined /></Button>,\n                <Button type='danger' onClick={showDeleteConfirm} ><DeleteOutlined /></Button>\n            ]}\n        >\n        <List.Item.Meta \n            avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n            title={`\n                ${user.name ? user.name : '...'} ${user.lastname ? user.lastname : '...'}\n            `}\n            description={user.email}\n        />\n        </List.Item>\n    )\n}"]},"metadata":{},"sourceType":"module"}