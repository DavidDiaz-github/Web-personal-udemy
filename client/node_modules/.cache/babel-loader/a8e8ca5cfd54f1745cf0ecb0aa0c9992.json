{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/pages/Admin/Blog/Blog.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, message, notification } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Modal from '../../../components/Modal';\nimport PostList from '../../../';\nimport './Blog.scss';\nimport { getPostApi } from '../../../api/post';\n\nfunction Blog(props) {\n  const [modalTitle, setModalTitle] = useState('');\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  const [posts, setPosts] = useState(null);\n  const [reloadPosts, setReloadPosts] = useState(false);\n  const {\n    location,\n    history\n  } = props;\n  const {\n    page = 1\n  } = queryString.parse(location.search);\n  useEffect(() => {\n    getPostApi(12, page).then(response => {\n      if ((response === null || response === void 0 ? void 0 : response.code) !== 200) {\n        notification['warning']({\n          message: response.message\n        });\n      } else {\n        setPosts(response.posts);\n      }\n    }).catch(() => notification['error']({\n      message: 'Error del servidor.'\n    }));\n    setReloadPosts(false);\n  }, [page, reloadPosts]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog__add-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Nuevo Post\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Post list\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"paginacion....\"), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    width: \"75%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withRouter(Blog);","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/pages/Admin/Blog/Blog.js"],"names":["React","useEffect","useState","Button","message","notification","withRouter","queryString","Modal","PostList","getPostApi","Blog","props","modalTitle","setModalTitle","isVisibleModal","setIsVisibleModal","modalContent","setModalContent","posts","setPosts","reloadPosts","setReloadPosts","location","history","page","parse","search","then","response","code","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,YAA1B,QAA8C,MAA9C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEC,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAElB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,KAAD,CAApD;AACC,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;AAED,QAAM;AAAEqB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBZ,KAA9B;AACC,QAAM;AAAEa,IAAAA,IAAI,GAAG;AAAT,MAAelB,WAAW,CAACmB,KAAZ,CAAkBH,QAAQ,CAACI,MAA3B,CAArB;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,EAAD,EAAKe,IAAL,CAAV,CACKG,IADL,CACUC,QAAQ,IAAI;AACd,UAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,MAAmB,GAAvB,EAA4B;AACzBzB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AAACD,UAAAA,OAAO,EAAEyB,QAAQ,CAACzB;AAAnB,SAAxB;AACF,OAFD,MAEO;AACHgB,QAAAA,QAAQ,CAACS,QAAQ,CAACV,KAAV,CAAR;AACJ;AACJ,KAPJ,EAQKY,KARL,CAQW,MAAM1B,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAtB,CARjB;AASAkB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAXQ,EAWN,CAACG,IAAD,EAAOJ,WAAP,CAXM,CAAT;AAaD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAER,UADX;AAEI,IAAA,SAAS,EAAEE,cAFf;AAGI,IAAA,YAAY,EAAEC,iBAHlB;AAII,IAAA,KAAK,EAAC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAiBH;;AAGD,eAAeV,UAAU,CAACK,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, message, notification } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Modal from '../../../components/Modal';\nimport PostList from '../../../'\n\nimport './Blog.scss';\nimport { getPostApi } from '../../../api/post';\n\n function Blog(props) {\n\n    const [modalTitle, setModalTitle] = useState('');\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\n     const [modalContent, setModalContent] = useState(null);\n     const [posts, setPosts] = useState(null);\n     const [reloadPosts, setReloadPosts] = useState(false);\n\n    const { location, history } = props;\n     const { page = 1 } = queryString.parse(location.search);\n     \n    \n     \n     useEffect(() => {\n         getPostApi(12, page)\n             .then(response => {\n                 if (response?.code !== 200) {\n                    notification['warning']({message: response.message})\n                 } else {\n                     setPosts(response.posts)\n                }\n            })\n             .catch(() => notification['error']({ message: 'Error del servidor.' }))\n         setReloadPosts(false)\n     }, [page, reloadPosts])\n\n    return (\n        <div className='blog'>\n            <div className='blog__add-post'>\n                <Button type='primary'>\n                    Nuevo Post\n                </Button>\n            </div>\n            <h1>Post list</h1>\n            <h2>paginacion....</h2>\n            <Modal \n                title={modalTitle }\n                isVisible={isVisibleModal }\n                setIsVisible={setIsVisibleModal }\n                width='75%'\n            />\n        </div>\n    )\n}\n\n\nexport default withRouter(Blog)"]},"metadata":{},"sourceType":"module"}