{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/pages/Courses.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Spin, notification } from 'antd';\nimport { getCoursesApi } from '../api/courses';\nimport PresentationCourse from '../components/Web/Courses/PresentationCourses';\nimport CoursesList from '../components/Web/Courses/CoursesList';\nexport default function Courses() {\n  const [courses, setCourses] = useState(null);\n  useEffect(() => {\n    getCoursesApi().then(response => {\n      if ((response === null || response === void 0 ? void 0 : response.code) !== 200) {\n        notification['warning']({\n          message: response.message\n        });\n      } else {\n        setCourses(response.courses);\n      }\n    }).catch(() => {\n      notification['error']({\n        message: 'Error del servidor.'\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PresentationCourse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CoursesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/pages/Courses.js"],"names":["React","useEffect","useState","Row","Col","Spin","notification","getCoursesApi","PresentationCourse","CoursesList","Courses","courses","setCourses","then","response","code","message","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,YAAzB,QAA6C,MAA7C;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,kBAAP,MAA+B,+CAA/B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa,GACRM,IADL,CACUC,QAAQ,IAAI;AACd,UAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,MAAmB,GAAvB,EAA4B;AACxBT,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AAACU,UAAAA,OAAO,EAAEF,QAAQ,CAACE;AAAnB,SAAxB;AACH,OAFD,MAEO;AACHJ,QAAAA,UAAU,CAACE,QAAQ,CAACH,OAAV,CAAV;AACH;AACJ,KAPL,EAQKM,KARL,CAQW,MAAM;AACTX,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAACU,QAAAA,OAAO,EAAE;AAAV,OAAtB;AACH,KAVL;AAWH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,eAQI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAYH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Spin, notification } from 'antd';\nimport { getCoursesApi } from '../api/courses';\n\nimport PresentationCourse from '../components/Web/Courses/PresentationCourses';\nimport CoursesList from '../components/Web/Courses/CoursesList';\n\nexport default function Courses() {\n\n    const [courses, setCourses] = useState(null);\n\n    useEffect(() => {\n        getCoursesApi()\n            .then(response => {\n                if (response?.code !== 200) {\n                    notification['warning']({message: response.message})\n                } else {\n                    setCourses(response.courses)\n                }\n            })\n            .catch(() => {\n                notification['error']({message: 'Error del servidor.'})\n            })\n    }, [])\n\n    return (\n        <Row>\n            <Col md={4} />\n            <Col md={16}>\n                <PresentationCourse />\n\n                \n                <CoursesList />\n            </Col>\n            <Col md={4} />\n        </Row>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}