{"ast":null,"code":"import { basePath, apiVersion } from './config';\nexport function signUpApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-up`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(Response => {\n    return Response.json();\n  }).then(result => {\n    if (result.user) {\n      return {\n        ok: true,\n        message: \"Usuario creado correctamente.\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    //console.log(result);\n    return result;\n  }).catch(err => err.message);\n}\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n  const params = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  });\n}","map":{"version":3,"sources":["/Users/ddiaz/Desktop/web-personal/client/src/api/user.js"],"names":["basePath","apiVersion","signUpApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","Response","json","result","user","ok","message","catch","err","signInApi","response","getUsersApi","token","Authorization"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,UAArC;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,QAAMC,GAAG,GAAI,GAAEJ,QAAS,IAAGC,UAAW,UAAtC;AACA,QAAMI,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFK;AAGXO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHE,GAAf;AAQA,SAAOC,KAAK,CAACP,GAAD,EAAMC,MAAN,CAAL,CAAmBO,IAAnB,CAAwBC,QAAQ,IAAI;AACpC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACF,GAFE,EAEAF,IAFA,CAEKG,MAAM,IAAI;AACd,QAAIA,MAAM,CAACC,IAAX,EAAiB;AACb,aAAO;AACHC,QAAAA,EAAE,EAAE,IADD;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH;;AACD,WAAO;AACHD,MAAAA,EAAE,EAAE,KADD;AAEHC,MAAAA,OAAO,EAAEH,MAAM,CAACG;AAFb,KAAP;AAIH,GAbE,EAaAC,KAbA,CAaOC,GAAG,IAAI;AACb,WAAO;AACHH,MAAAA,EAAE,EAAE,KADD;AAEHC,MAAAA,OAAO,EAAEE,GAAG,CAACF;AAFV,KAAP;AAIH,GAlBE,CAAP;AAmBH;AAED,OAAO,SAASG,SAAT,CAAmBlB,IAAnB,EAAyB;AAC5B,QAAMC,GAAG,GAAI,GAAEJ,QAAS,IAAGC,UAAW,UAAtC;AAEA,QAAMI,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFK;AAGXO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHE,GAAf;AAQA,SAAOC,KAAK,CAACP,GAAD,EAAMC,MAAN,CAAL,CACFO,IADE,CACGU,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACR,IAAT,EAAP;AACH,GAHE,EAIFF,IAJE,CAIGG,MAAM,IAAI;AACZ;AACA,WAAOA,MAAP;AACH,GAPE,EAQFI,KARE,CAQIC,GAAG,IAAIA,GAAG,CAACF,OARf,CAAP;AASH;AAED,OAAO,SAASK,WAAT,CAAqBC,KAArB,EAA4B;AAC/B,QAAMpB,GAAG,GAAI,GAAEJ,QAAS,IAAGC,UAAW,QAAtC;AAEA,QAAMI,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXI,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELe,MAAAA,aAAa,EAAED;AAFV;AAFE,GAAf;AAQA,SAAOb,KAAK,CAACP,GAAD,EAAMC,MAAN,CAAL,CACFO,IADE,CACGU,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACR,IAAT,EAAP;AACH,GAHE,EAIFF,IAJE,CAIGG,MAAM,IAAI;AACZ,WAAOA,MAAP;AACH,GANE,CAAP;AAQH","sourcesContent":["import { basePath, apiVersion } from './config';\n\nexport function signUpApi(data) {\n    const url = `${basePath}/${apiVersion}/sign-up`;\n    const params = {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    };\n    \n    return fetch(url, params).then(Response => {\n           return Response.json();\n        }).then(result => {\n            if (result.user ){\n                return {\n                    ok: true,\n                    message: \"Usuario creado correctamente.\"\n                } \n            }\n            return {\n                ok: false,\n                message: result.message\n            }\n        }).catch( err => {\n            return {\n                ok: false,\n                message: err.message\n            }\n        })\n}\n\nexport function signInApi(data) {\n    const url = `${basePath}/${apiVersion}/sign-in`;\n\n    const params = {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            return response.json();\n        })\n        .then(result => {\n            //console.log(result);\n            return result\n        })\n        .catch(err => err.message);\n}\n\nexport function getUsersApi(token) {\n    const url = `${basePath}/${apiVersion}/users`;\n    \n    const params = {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token\n        }\n    };\n\n    return fetch(url, params)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => {\n            return result;\n        })\n        \n}"]},"metadata":{},"sourceType":"module"}