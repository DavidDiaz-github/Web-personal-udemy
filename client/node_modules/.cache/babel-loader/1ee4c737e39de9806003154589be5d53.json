{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/components/Admin/Courses/CoursesList/CoursesList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Button, notification, Modal as ModalAntd } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DragSortableList from 'react-drag-sortable';\nimport Modal from '../../../Modal';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport { getCourseDataUdemyApi } from '../../../../api/courses';\nimport './CoursesList.scss';\nconst {\n  confirm\n} = ModalAntd;\nexport default function CoursesList(props) {\n  const {\n    courses,\n    setReloadCourses\n  } = props;\n  const [listCourses, setListCourses] = useState([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n  useEffect(() => {\n    const listCoursesArray = [];\n    courses.forEach(course => {\n      listCoursesArray.push({\n        content: /*#__PURE__*/React.createElement(Course, {\n          course: course,\n          deleteCourse: deleteCourse,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        })\n      });\n    });\n    setListCourses(listCoursesArray);\n  }, [courses]);\n\n  const onSort = (sortedList, dropEvent) => {\n    console.log(sortedList);\n  };\n\n  const deleteCourse = course => {\n    const accessToken = getAccessToken;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courses-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courses-list__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => console.log('Creando curso.....YAY!!!'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Nuevo curso\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"courses-list__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, listCourses.length === 0 && /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      \"margin\": 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"No tienes cursos creados\"), /*#__PURE__*/React.createElement(DragSortableList, {\n    items: listCourses,\n    onSort: onSort,\n    type: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction Course(props) {\n  const {\n    course,\n    deleteCourse\n  } = props;\n  const [courseData, setCourseData] = useState(null);\n  useEffect(() => {\n    getCourseDataUdemyApi(course.idCourse).then(response => {\n      if (response.code !== 200) {\n        notification['warning']({\n          message: `El curso con el id ${course.idCourse} no se ha encontrado.`\n        });\n      }\n\n      setCourseData(response.data);\n    });\n  }, [course]);\n\n  if (!courseData) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => console.log('Editar curso.'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => deleteCourse(course),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 76\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: courseData.image_480x270,\n    alt: courseData.title,\n    style: {\n      width: \"100px\",\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List.Item.Meta, {\n    title: `${courseData.title} | ID: ${course.idCourse}`,\n    description: courseData.headline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/components/Admin/Courses/CoursesList/CoursesList.js"],"names":["React","useState","useEffect","List","Button","notification","Modal","ModalAntd","EditOutlined","DeleteOutlined","DragSortableList","getAccessTokenApi","getCourseDataUdemyApi","confirm","CoursesList","props","courses","setReloadCourses","listCourses","setListCourses","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","listCoursesArray","forEach","course","push","content","deleteCourse","onSort","sortedList","dropEvent","console","log","accessToken","getAccessToken","length","textAlign","Course","courseData","setCourseData","idCourse","then","response","code","message","data","image_480x270","title","width","marginRight","headline"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { List, Button, notification, Modal as ModalAntd } from 'antd';\nimport {\n    EditOutlined,\n    DeleteOutlined\n} from '@ant-design/icons';\nimport DragSortableList from 'react-drag-sortable';\nimport Modal from '../../../Modal';\nimport { getAccessTokenApi} from '../../../../api/auth';\nimport { getCourseDataUdemyApi } from '../../../../api/courses';\n\nimport './CoursesList.scss';\n\nconst { confirm } = ModalAntd;\n\n\nexport default function CoursesList(props) {\n\n    const { courses, setReloadCourses } = props;\n    const [listCourses, setListCourses] = useState([]);\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(\"\");\n    const [modalContent, setModalContent] = useState(null);\n\n    useEffect(() => {\n        const listCoursesArray = [];\n        courses.forEach(course => {\n            listCoursesArray.push({\n                content: (\n                    <Course \n                        course={course}\n                        deleteCourse={deleteCourse}\n                    />\n                )\n            })\n        })\n        setListCourses(listCoursesArray)\n    }, [courses])\n\n    const onSort = (sortedList, dropEvent) => {\n        console.log(sortedList);\n    }\n\n    const deleteCourse = course => {\n        const accessToken = getAccessToken\n    }\n\n    return (\n        <div className='courses-list'>\n            <div className='courses-list__header'>\n                <Button type='primary' onClick={() => console.log('Creando curso.....YAY!!!')}>\n                    Nuevo curso\n                </Button>\n            </div>  \n            <div className='courses-list__items'>\n                {listCourses.length === 0 && (\n                    <h2 style={{textAlign:\"center\", \"margin\":0}}>No tienes cursos creados</h2>\n                )}\n                <DragSortableList items={listCourses} onSort={onSort} type=\"vertical\" />\n            </div>\n        </div>\n    )\n}\n\n\nfunction Course(props) {\n    const { course, deleteCourse } = props;\n    const [courseData, setCourseData] = useState(null);\n\n    useEffect(() => {\n        getCourseDataUdemyApi(course.idCourse).then(response => {\n            if (response.code !== 200) {\n                notification['warning']({message: `El curso con el id ${course.idCourse} no se ha encontrado.`})\n            }\n            setCourseData(response.data)\n        })\n    }, [course])\n\n    if (!courseData) {\n        return null\n    }\n\n    return (\n        <List.Item\n            actions={[\n                <Button type='primary' onClick={() => console.log('Editar curso.')}><EditOutlined /></Button>,\n                <Button type='danger' onClick={() => deleteCourse(course)}><DeleteOutlined /></Button>               \n            ]}\n        >\n            <img src={courseData.image_480x270} alt={courseData.title} style={{ width: \"100px\", marginRight: \"20px\" }} />\n            <List.Item.Meta \n                title={`${courseData.title} | ID: ${course.idCourse}`}\n                description={courseData.headline}\n            />\n\n        </List.Item>\n    )\n}"]},"metadata":{},"sourceType":"module"}