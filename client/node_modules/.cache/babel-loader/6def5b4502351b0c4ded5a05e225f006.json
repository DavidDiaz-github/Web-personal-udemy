{"ast":null,"code":"var _jsxFileName = \"/Users/ddiaz/web-personal-udemy/client/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Form, Input, Col, Button, DatePicker, notification } from 'antd';\nimport { FontSizeOutlined, LinkOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport { addPostApi, updatePostApi } from '../../../../api/post';\nimport './AddEditPostForm.scss';\nexport default function AddEditPostForm(props) {\n  const {\n    setIsVisibleModal,\n    setReloadPosts,\n    post\n  } = props;\n  const [postData, setPostData] = useState({});\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    } else {\n      setPostData({});\n    }\n  }, [post]);\n\n  const processPost = e => {\n    e.preventDefault();\n    const {\n      title,\n      url,\n      description,\n      date\n    } = postData;\n\n    if (!title || !url || !description || !date) {\n      notification['error']({\n        message: 'Todos los campos son obligatorios.'\n      });\n    } else {\n      if (!post) {\n        addPost();\n      } else {\n        updatePost();\n      }\n    }\n  };\n\n  const addPost = () => {\n    const token = getAccessTokenApi();\n    addPostApi(token, postData).then(response => {\n      const typeNotification = response.code === 200 ? 'success' : 'warning';\n      notification[typeNotification]({\n        message: response.message\n      });\n      setIsVisibleModal(false);\n      setReloadPosts(true);\n      setPostData({});\n    }).catch(() => {\n      notification['error']({\n        message: 'Error del servidor.'\n      });\n    });\n  };\n\n  const updatePost = () => {\n    const token = getAccessTokenApi();\n    updatePostApi;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-edit-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddEditForm, {\n    postData: postData,\n    setPostData: setPostData,\n    post: post,\n    processPost: processPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }));\n}\n;\n\nfunction AddEditForm(props) {\n  const {\n    postData,\n    setPostData,\n    post,\n    processPost\n  } = props;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"add-edit-post-form\",\n    layout: \"inline\",\n    onSubmitCapture: processPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontSizeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }),\n    placeholder: \"Titulo\",\n    value: postData.title,\n    onChange: e => {\n      setPostData({ ...postData,\n        title: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LinkOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }),\n    placeholder: \"URL\",\n    value: postData.url,\n    onChange: e => {\n      setPostData({ ...postData,\n        url: transformTextUrl(e.target.value)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    format: \"DD/MM/YYYY HH:mm:ss\",\n    placeholder: \"Fecha de publicaci\\xF3n\",\n    showTime: {\n      defaultValue: moment(\"00:00:00\", \"HH:mm:ss\")\n    },\n    value: postData.date && moment(postData.date),\n    onChange: (e, value) => setPostData({ ...postData,\n      date: moment(value, \"DD/MM/YYYY HH:mm:ss\").toISOString()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Editor, {\n    value: postData.description ? postData.description : '',\n    init: {\n      height: 400,\n      width: '90%',\n      menubar: true,\n      plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n      toolbar: 'undo redo | formatselect | bold italic backcolor | \\\n                        alignleft aligncenter alignright alignjustify | \\\n                        bullist numlist outdent indent | removeformat | help'\n    },\n    onBlur: e => setPostData({ ...postData,\n      description: e.target.getContent()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, post ? 'Actualizar Post' : 'Crear Post'));\n}\n\nfunction transformTextUrl(text) {\n  const url = text.replace(\" \", \"-\");\n  return url.toLowerCase();\n}","map":{"version":3,"sources":["/Users/ddiaz/web-personal-udemy/client/src/components/Admin/Blog/AddEditPostForm/AddEditPostForm.js"],"names":["React","useState","useEffect","Row","Form","Input","Col","Button","DatePicker","notification","FontSizeOutlined","LinkOutlined","moment","Editor","getAccessTokenApi","addPostApi","updatePostApi","AddEditPostForm","props","setIsVisibleModal","setReloadPosts","post","postData","setPostData","processPost","e","preventDefault","title","url","description","date","message","addPost","updatePost","token","then","response","typeNotification","code","catch","AddEditForm","target","value","transformTextUrl","width","defaultValue","toISOString","height","menubar","plugins","toolbar","getContent","text","replace","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Form, Input, Col, Button, DatePicker, notification } from 'antd';\nimport {\n    FontSizeOutlined,\n    LinkOutlined\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport { addPostApi, updatePostApi } from '../../../../api/post';\n\n \n\nimport './AddEditPostForm.scss';\n\nexport default function AddEditPostForm(props) {\n\n    const { setIsVisibleModal, setReloadPosts, post } = props;\n    const [postData, setPostData] = useState({});\n\n    useEffect(() => {\n        if (post) {\n            setPostData(post)\n        } else {\n            setPostData({})\n        }\n    }, [post])\n\n    const processPost = e => {\n        e.preventDefault()\n        const { title, url, description, date } = postData;\n\n        if (!title || !url || !description || !date) {\n            notification['error']({message: 'Todos los campos son obligatorios.'})\n        } else {\n            if (!post) {\n                addPost()\n            } else {\n                updatePost()\n            }\n        }\n    }\n\n    const addPost = () => {\n        const token = getAccessTokenApi()\n\n        addPostApi(token, postData)\n            .then(response => {\n                const typeNotification = response.code === 200 ? 'success' : 'warning'\n                notification[typeNotification]({ message: response.message })\n                setIsVisibleModal(false)\n                setReloadPosts(true)\n                setPostData({})\n            })\n            .catch(() => {\n                notification['error']({message: 'Error del servidor.'})\n            })\n    }\n\n    const updatePost = () => {\n        const token = getAccessTokenApi()\n\n        updatePostApi\n    }\n\n    return (\n        <div className='add-edit-post-form'>\n            <AddEditForm postData={postData} setPostData={setPostData} post={post} processPost={processPost} />\n        </div>\n    )\n};\n\nfunction AddEditForm(props) {\n    const { postData, setPostData, post, processPost } = props\n    \n    return (\n        <Form className='add-edit-post-form' layout='inline' onSubmitCapture={processPost} >\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Input \n                        prefix={<FontSizeOutlined />}\n                        placeholder='Titulo'\n                        value={postData.title}\n                        onChange={e => {\n                            setPostData({...postData, title: e.target.value})\n                        }}\n                    />\n                </Col>\n                <Col span={8}>\n                    <Input \n                        prefix={<LinkOutlined />}\n                        placeholder='URL'\n                        value={postData.url}\n                        onChange={e => {\n                            setPostData({...postData, url: transformTextUrl(e.target.value)})\n                        }}\n                    />\n                </Col>\n                <Col span={8}>\n                    <DatePicker \n                        style={{ width: '100%' }}\n                        format=\"DD/MM/YYYY HH:mm:ss\"\n                        placeholder='Fecha de publicación'\n                        showTime={{defaultValue: moment(\"00:00:00\", \"HH:mm:ss\")}}\n                        value={postData.date && moment(postData.date)}\n                        onChange = {\n                            (e, value) => setPostData({\n                                ...postData,\n                                date: moment(value, \"DD/MM/YYYY HH:mm:ss\").toISOString()\n                            })\n                        }\n                    />\n                </Col>\n            </Row>\n            <Editor\n                value={postData.description ? postData.description : ''}\n                init={{\n                    height: 400,\n                    width: '90%',\n                    menubar: true,\n                    plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount'\n                    ],\n                    toolbar:\n                        'undo redo | formatselect | bold italic backcolor | \\\n                        alignleft aligncenter alignright alignjustify | \\\n                        bullist numlist outdent indent | removeformat | help'\n                }}\n                onBlur={e => setPostData({...postData, description: e.target.getContent()})}\n            />\n            <Button type='primary' htmlType='submit' className='btn-submit'>\n                {post ? 'Actualizar Post' : 'Crear Post'}\n            </Button>\n        </Form>\n    )\n}\n\nfunction transformTextUrl(text) {\n    const url = text.replace(\" \", \"-\")\n    return url.toLowerCase()\n}"]},"metadata":{},"sourceType":"module"}